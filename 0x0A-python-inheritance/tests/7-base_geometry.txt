--------Test-----------

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>> bg.integer_validator("name", "Daniel")
Traceback (most recent call last):
	...
TypeError: name must be an integer
>>> bg.integer_validator("negatif", -10)
Traceback (most recent call last):
	...
ValueError: negatif must be greater than 0
>>> bg.integer_validator("isZero", 0)
Traceback (most recent call last):
	...
ValueError: isZero must be greater than 0
>>> bg.area()
Traceback (most recent call last):
	...
Exception: area() is not implemented
>>> bg.integer_validator("name")
Traceback (most recent call last):
	...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator()
Traceback (most recent call last):
	...
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
	...
TypeError: age must be an integer
>>> bg.integer_validator("age", [6])
Traceback (most recent call last):
	...
TypeError: age must be an integer
>>> bg.integer_validator("age", {4,3})
Traceback (most recent call last):
	...
TypeError: age must be an integer
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
	...
TypeError: age must be an integer
